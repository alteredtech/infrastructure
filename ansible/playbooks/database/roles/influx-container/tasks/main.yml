- name: make sure docker is started
  become: yes
  command: systemctl start docker

- name: Ensure docker is in a running state
  service:
    name: docker 
    state: started
  register: dockerDetails
  until: dockerDetails.status.ActiveState == "active"
  retries: 15
  delay: 20

- name: create network
  register: res
  retries: 100
  delay: 1
  until: res is not failed
  docker_network:
    name: metrics

- name: create chronograf
  docker_container:
    name: chronograf
    image: chronograf:1.8.10
    restart_policy: always
    networks:
      - name: metrics
    purge_networks: yes
    ports:
      - "8888:8888"
    env:
      INFLUXDB_URL: 'http://influxdb:8086' 
      INFLUXDB_USERNAME: "{{ lookup('hashi_vault', 'secret=kv/data/influxdb:username', token=vault_token, url=vault_addr) }}" 
      INFLUXDB_PASSWORD: "{{ lookup('hashi_vault', 'secret=kv/data/influxdb:password', token=vault_token, url=vault_addr) }}" 

- name: create influxdb
  docker_container:
    name: influxdb
    image: influxdb:1.8.10
    state: started
    recreate: yes
    restart-policy: always
    env:
      INFLUXDB_ADMIN_PASSWORD: "{{ lookup('hashi_vault', 'secret=kv/data/influxdb:password', token=vault_token, url=vault_addr) }}"
      INFLUXDB_ADMIN_USER: "{{ lookup('hashi_vault', 'secret=kv/data/influxdb:username', token=vault_token, url=vault_addr) }}"
      INFLUXDB_DATA_INDEX_VERSION: tsi1
    volumes:
      - '/home/packer/database/influxdb:/var/lib/influxdb'
      - '/home/packer/database/influxdb/config:/etc/influxdb'
    ports:
      - "8086:8086"
    networks:
      - name: metrics
    purge_networks: yes
