- name: create database docker containers
  hosts: sandbox
  vars_files:
    - ./database-vars.yml

  tasks:
    - name: apt update ubuntu machines
      become: yes
      apt:
        update_cache: yes
        upgrade: 'yes'
        autoclean: yes

    - name: install docker and nfs-common
      become: yes
      apt:
        name: ['docker.io','nfs-common']
        state: present

    - name: create docker group
      become: yes
      group:
        name: docker
        state: present

    - name: added packer to group
      become: yes
      user:
        name: packer
        groups: docker, packer
        append: yes

    - name: install python package manager
      become: yes
      apt:
        name: python3-pip
  
    - name: install python sdk
      become: yes
      pip:
        name:
          - docker
          - docker-compose

    - name: create backup directory
      file:
        path: ${HOME}/backups
        state: directory
    
    - name: Mount backups for database
      become: yes
      ansible.posix.mount:
        src: "{{ mount_point }}"
        path: backups
        opts: defaults,hard
        state: mounted
        fstype: nfs
    
    - name: create pgadmin4
      docker_container:
        name: pgadmin4
        image: dpage/pgadmin4:6.4
        state: started
        recreate: yes
        env:
          PGADMIN_DEFAULT_EMAIL: "{{ lookup('hashi_vault', 'secret=kv/data/postgres:pg-email', token=vault_token, url=vault_addr) }}"
          PGADMIN_DEFAULT_PASSWORD: "{{ lookup('hashi_vault', 'secret=kv/data/postgres:pg-password', token=vault_token, url=vault_addr) }}"
        ports:
          - "9002:80"
        healthcheck:
          test: ["CMD","curl","--fails","127.0.0.1:80"]
          interval: 1m30s
          timeout: 10s
          retries: 3
          start_period: 30s

    - name: create postgres
      docker_container:
        name: postgres
        image: postgres:14.1-alpine
        state: started
        recreate: yes
        env:
          POSTGRES_PASSWORD: "{{ lookup('hashi_vault', 'secret=kv/data/postgres:password', token=vault_token, url=vault_addr) }}"
          POSTGRES_USER: "{{ lookup('hashi_vault', 'secret=kv/data/postgres:username', token=vault_token, url=vault_addr) }}"
          POSTGRES_DB: "k3s"
          PGDATA: "/var/lib/postgresql/data/pgdata"
        volumes:
          - '/home/packer/backups/postgresql:/var/lib/postgresql'
        ports:
          - "5432:5432"